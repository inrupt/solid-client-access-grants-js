name: CI

on: [push]

env:
  CI: true
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # Available OS's: https://help.github.com/en/actions/reference/virtual-environments-for-github-hosted-runners
        os: [ubuntu-20.04, windows-2019, macos-10.15]
        node-version: [16.x, 14.x, 12.x]
    steps:
    - uses: actions/checkout@v2.3.4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2.5.1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Cache node modules
      uses: actions/cache@v2.1.7
      env:
        cache-name: cache-node-modules
      with:
        path: node_modules
        key: ${{ runner.os }}-node${{ runner.node-version }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
    - run: npm ci
    - run: npm run build
    - run: npm run lint
    - run: npm run check-licenses
    # Some issues identified by npm audit cannot be fixed by us
    # (i.e. they require an upstream dependency update),
    # but using `npm-force-resolutions` we can at least override the upstream
    # dependency when running an audit.
    # If this task fails, first attempt to run `npm audit fix` or upgrade the
    # relevant dependency; when that does not work, you can add the transitive
    # dependency to the `resolutions` field in package.json according to the
    # instructions in `npm-force-resolutions`'s README.
    - run: npx npm-force-resolutions@0.0.10 && npm audit --audit-level=moderate
    - run: npm test
    - run: npx package-check
    - name: Archive code coverage results
      uses: actions/upload-artifact@v2.3.1
      continue-on-error: true
      with:
        name: code-coverage-report
        path: coverage
    - name: Archive production artifacts
      uses: actions/upload-artifact@v2.3.1
      continue-on-error: true
      with:
        name: dist
        path: dist
