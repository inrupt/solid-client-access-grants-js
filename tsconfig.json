{
  "compilerOptions": {
    /* Basic Options */
    "target": "es2017",
    "module": "commonjs",
    "lib": ["es2017", "dom"],
    "declaration": true,
    "outDir": "dist",
    "rootDir": "src",
    "strict": true,
    "esModuleInterop": true,
    // Prevent developers on different OSes from running into problems:
    "forceConsistentCasingInFileNames": true,
    /* Advanced Options */
    "stripInternal": true
  },
  "include": ["src/index.ts"],
  "typedocOptions": {
    "out": "docs/api/source/api",
    "entryPoints": [
      // The source files of everything listed under `exports` in our package.json
      // (i.e. public API's that should be documented) should be listed here:
      "src/index.ts",
      "src/resource/index.ts",
      "src/fetch/index.ts",
      "src/gConsent/index.ts",
      "src/gConsent/discover/index.ts",
      "src/gConsent/manage/index.ts",
      "src/gConsent/request/index.ts",
      "src/gConsent/verify/index.ts",
      "src/odrl/index.ts",
      // These types are reused across files, so give them a specific page for
      // them to be documented on:
      "src/type/RedirectOptions.ts",
      "src/type/FetchOptions.ts",
      "src/type/UmaConfiguration.ts",
      "src/type/AccessGrant.ts",
      "src/type/AccessModes.ts",
      "src/gConsent/type/AccessBaseOptions.ts",
      "src/gConsent/type/IssueAccessRequestParameters.ts",
      "src/gConsent/type/Parameter.ts",
      "src/odrl/type/AccessGrant.ts"
    ],
    "exclude": [
      "node_modules/**",
      ".codesandbox/**",
      "**/*.test.ts",
      // Internal helpers:
      "**/*.internal.ts",
      // Re-exported functions are already documented in their own modules:
      "src/index.ts",
      // Constants are only used internally:
      "src/constants.ts"
    ],
    "theme": "markdown",
    "readme": "none",
    "hideInPageTOC": true,
    "entryDocument": "index.md"
  }
}
